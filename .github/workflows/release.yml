name: Release

on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - uses: android-actions/setup-android@v2

#      - id: decodeAppKeystore
#        run: |
#          echo "${{ env.APP_SIGNING_KEYFILE_BASE64 }}" | base64 --decode - > "$HOME/key.jks"
#          echo "::set-output name=APP_SIGNING_KEYFILE::$HOME/key.jks"
#        env:
#          APP_SIGNING_KEYFILE_BASE64: ${{ secrets.APP_SIGNING_KEYFILE_BASE64 }}

      - name: Run script file
        run: |
          chmod +x ./publish.sh
          ./publish.sh
        shell: bash
        env:
#          APP_SIGNING_KEYFILE: ${{ steps.decodeAppKeystore.outputs.APP_SIGNING_KEYFILE }}
#          APP_SIGNING_PASS: ${{ secrets.APP_SIGNING_PASS }}
#          APP_SIGNING_ALIAS: ${{ secrets.APP_SIGNING_ALIAS }}
          OSS_USERNAME: ${{ secrets.OSS_USERNAME }}
          OSS_PASSWORD: ${{ secrets.OSS_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASS: ${{ secrets.SIGNING_PASS }}

#      - run: ./gradlew lintRelease publishToMavenLocal publishToSonatype closeSonatypeStagingRepository | tee publishToSonatype.log
#        # bash has pipefail on by default, which is needed for tee to fail, if gradle fails
#        shell: bash
#        env:
#          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
#          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
#          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
#          SIGNING_PASS: ${{ secrets.SIGNING_PASS }}

