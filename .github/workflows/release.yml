name: appRelease

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  buildAppAndPublishToNexus:
    runs-on: ubuntu-latest
#    outputs:
      # in case there's a commit between buildSampleApp and releaseApp jobs...
#      GIT_TAG: ${{ github.event.ref }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - uses: android-actions/setup-android@v2

      - name: Run script file
        run: |
          chmod +x ./publish.sh
          ./publish.sh
        shell: bash
        env:
          OSS_USERNAME: ${{ secrets.OSS_USERNAME }}
          OSS_PASSWORD: ${{ secrets.OSS_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASS: ${{ secrets.SIGNING_PASS }}

  releaseApp:
    needs: buildApp
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
#        with:
#           A branch is required for post release version increment commit
#          ref: ${{ needs.buildAppAndPublishToNexus.outputs.GIT_TAG }}

      - name: Retrieve the release version
        run: |
          echo "TAG_NAME=$( (grep -w "version" | cut -d= -f2) <common.properties)" >> $GITHUB_OUTPUT
        id: version

      - name: Retrieve =the release body
        run: |
          echo "GITHUB_RELEASE_BODY=$(cat CHANGELOG.md | tr '\n' ';;' | grep -oE "\#{1,2}\ *$TAG_NAME[^\#]*(\#|\Z)" | tr ';;' '\n')" >> $GITHUB_OUTPUT
        id: gitHubReleaseBody
        env:
          TAG_NAME: ${{ steps.version.outputs.TAG_NAME }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ steps.version.outputs.TAG_NAME }}-test"
          name: "test release just to check CI ${{ github.event.repository.name }} v${{ steps.version.outputs.appVersion }}"
          body: "${{ steps.gitHubReleaseBody.outputs.GITHUB_RELEASE_BODY }}"